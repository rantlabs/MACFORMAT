--
Compile for Windows 32-bit:
GOOS=windows GOARCH=386 go build -o macformatv4_windows_32.exe macformatv4.go
--
Compile for Windows 64-bit:
GOOS=windows GOARCH=amd64 go build -o macformatv4_windows_64.exe macformatv4.go
--
Compile for Linux 32-bit:
GOOS=linux GOARCH=386 go build -o macformatv4_linux_32 macformatv4.go
--
Compile for Linux 64-bit:
GOOS=linux GOARCH=amd64 go build -o macformatv4_linux_64 macformatv4.go
--
Compile for macOS (64-bit):
GOOS=darwin GOARCH=amd64 go build -o macformatv4_mac macformatv4.go
--
Compile for Raspberry Pi (ARM architecture):
For ARMv6 (used in older Raspberry Pi models like the Raspberry Pi 1 and Zero):
GOOS=linux GOARCH=arm GOARM=6 go build -o macformatv4_rpi_armv6 macformatv4.go
--
For ARMv7 (used in Raspberry Pi 2 and 3):
GOOS=linux GOARCH=arm GOARM=7 go build -o macformatv4_rpi_armv7 macformatv4.go
--
For ARM64 (used in Raspberry Pi 3 Model B+ and 4):
GOOS=linux GOARCH=arm64 go build -o macformatv4_rpi_arm64 macformatv4.go
--
Compile for Apple Silicon Architecture macOS (named arm64):
GOOS=darwin GOARCH=arm64 go build -o macformatv4_mac_arm64 macformatv4.go
--
Notes:
GOOS specifies the target operating system.
GOARCH specifies the target architecture.
GOARM specifies the ARM version for ARM builds.
For detailed cross-compilation support, you can check the official documentation: Go Cross Compilation.
With these commands, you can create binaries for different platforms from any supported system as long as you have Go installed.
--
